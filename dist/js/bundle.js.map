{"version":3,"sources":["app.js","controllers/mainCtrl.js","controllers/mapCtrl.js","controllers/parksCtrl.js","services/mainSrv.js","services/mapsSrv.js","services/parksSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$scope","mainSrv","$stateParams","$location","parksSrv","test","test2","path","showMenu","$state","populateMap","showMap","id","location","location_1","coordinates","console","log","mapboxgl","accessToken","map","Map","container","style","center","zoom","on","addLayer","parks","service","$http","getParksData","method","then","res","data","name","i","length","park"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('mainApp', ['ui.router'])\n    .config(function($stateProvider, $urlRouterProvider) {\n        $stateProvider\n            .state('welcome', {\n                url: '/',\n                templateUrl: '../views/welcome.html'\n            })\n            .state('home', {\n                url: '/home',\n                templateUrl: '../views/home.html'\n            })\n            .state('parks', {\n                url: '/parks',\n                templateUrl: '../views/parks.html',\n                controller: 'parksCtrl'\n            })\n            .state('map', {\n                url: '/map/:id',\n                templateUrl: '../views/map.html',\n                controller: 'mapCtrl'\n            })\n            .state('contact', {\n                url: '/contact',\n                templateUrl: '../views/contact.html'\n            })\n        $urlRouterProvider\n            .otherwise('/')\n    })","angular.module('mainApp').controller('mainCtrl', function($scope, mainSrv, $stateParams, $location, parksSrv) {\n    $scope.test = \"testing testing\"\n    $scope.test2 = mainSrv.test\n\n    if ($location.path() === '/') {\n        $scope.showMenu = false;\n    } else {\n        $scope.showMenu = true;\n    }\n    // console.log($location.path())\n\n\n})","angular.module('mainApp').controller('mapCtrl', function($scope, $stateParams, $state, parksSrv) {\n\n\n    $scope.populateMap = parksSrv.showMap($stateParams.id)\n    let location = $scope.populateMap.location_1.coordinates\n    console.log(location)\n    mapboxgl.accessToken = 'pk.eyJ1Ijoic2FyZ2VudDg4IiwiYSI6ImNqMzY0aHRoODAwbGszMmxpdjd5NTl6OHgifQ.zWE7w8Bs3NvC6rhFXguUTQ';\n    var map = new mapboxgl.Map({\n        container: 'map',\n        style: 'mapbox://styles/mapbox/streets-v9',\n        center: location,\n        zoom: 13.5\n    });\n\n    map.on('load', function() {\n        map.addLayer({\n            \"id\": \"points\",\n            \"type\": \"symbol\",\n            \"source\": {\n                \"type\": \"geojson\",\n                \"data\": {\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [{\n                        \"type\": \"Feature\",\n                        \"geometry\": {\n                            \"type\": \"Point\",\n                            \"coordinates\": location\n                        }\n                    }]\n                }\n            },\n\n            \"layout\": {\n                \"icon-image\": \"marker-15\",\n                \"icon-size\": 3\n            },\n        })\n    })\n\n})","angular.module('mainApp').controller('parksCtrl', function($scope, parksSrv, $stateParams) {\n\n    $scope.parks = parksSrv.parks\n\n\n})","angular.module('mainApp').service('mainSrv', function() {\n    this.test = \"1 2 3\"\n\n})","","angular.module('mainApp').service('parksSrv', function($http) {\n\n    let getParksData = () => {\n        return $http({\n            method: 'get',\n            url: 'https://opendata.utah.gov/resource/vwt7-g473.json'\n        }).then((res) => {\n            this.parks = res.data;\n        })\n    };\n\n    getParksData()\n\n    this.showMap = (name) => {\n        for (var i = 0; i < this.parks.length; i++) {\n            if (name === this.parks[i].park) {\n                return this.parks[i]\n            }\n        }\n    }\n\n\n\n\n})"]}